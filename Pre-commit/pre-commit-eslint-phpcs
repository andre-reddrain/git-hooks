#!/bin/bash
exec </dev/tty

###################################################################################################################################
## Verifies if PHP and PHPCS are installed. Runs PHPCS for all staged php files, and blocks the commit, depending on user input. ##
###################################################################################################################################

# Color vars
C_RED="\033[31m"
C_GREEN="\033[32m"
C_YELLOW="\033[33m"

# Background vars
B_RED="\033[41m"

# Clear Format
NO_FORMAT="\033[0m"

STAGED_PHP_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".php\{0,1\}$")
STAGED_JS_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".js\{0,1\}$")
STAGED_VUE_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".vue\{0,1\}$")

PASS=true
INSTALL=1

check_instalation() {
  # echo "$1 / $2"
  which $2 &>/dev/null

  if [[ "$?" == 1 ]]; then
    echo -e "$1 not installed ${C_RED}✘${NO_FORMAT}"
    INSTALL=0
    return 0
  else
    echo -e "$1 installed ${C_GREEN}✔${NO_FORMAT}"
    return 1
  fi
}

check_staged_files() {
  echo "check_staged_files()! To be done!"
  #//TODO - check_staged_files
}

run_validation() {
  if [ "$1" = "" ]; then
    echo -e "No $4 files to be validated by $3. Moving on..."
  else
    echo "Validating $3..."

    for FILE in $1; do
      $2 "$FILE"

      if [[ "$?" != 0 ]]; then
        PASS=false
      fi
    done

    if ! $PASS; then
      # echo -e "${B_RED}PHPCS Failed!${NO_FORMAT}"
      # vendor/bin/phpcs $STAGED_FILES --report=summary
      echo -e "$3 validation ($4): ${C_RED}✘${NO_FORMAT}"
    else
      echo -e "${C_GREEN}$3 Passed!${NO_FORMAT}"
    fi
  fi
}

check_instalation "Docker" "docker"

if [[ "$?" != 1 ]]; then
  INSTALL=1
  check_instalation "PHP" "php" #PHP
  check_instalation "NodeJS" "node" #Node
  check_instalation "NPM" "npm" #NPM
  check_instalation "ESLint" "npx eslint" #ESLint
fi

#Temp Strings
if [[ $INSTALL == 0 ]]; then
  echo "Alguma coisa não foi instalada como deve de ser!"
  exit 1
else
  echo "Tudo foi instalado com sucesso!"

  run_validation "$STAGED_PHP_FILES" "vendor/bin/phpcs --standard=PSR12" "PHPCS" "PHP"
  run_validation "$STAGED_JS_FILES" "npx eslint" "ESLint" "JS"
  run_validation "$STAGED_VUE_FILES" "npx eslint" "ESLint" "Vue"

  #//TODO Print all validation lines (Line 156) at the same time! (Use a array)
  exit 1
fi
