#!/bin/bash
exec </dev/tty

###################################################################################################################################
## Verifies if PHP and PHPCS are installed. Runs PHPCS for all staged php files, and blocks the commit, depending on user input. ##
###################################################################################################################################

STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".php\{0,1\}$")
PASS=true
INSTALL=1

# Color vars
C_RED="\033[31m"
C_GREEN="\033[32m"
C_YELLOW="\033[38m"

# Background vars
B_RED="\033[41m"

# Clear Format
NO_FORMAT="\033[0m"

if [ "$STAGED_FILES" = "" ]; then
  exit 0
fi

which php &>/dev/null

if [[ "$?" == 1 ]]; then
  echo -e "PHP not installed ${C_RED}✘${NO_FORMAT}"
  INSTALL=0
else
  echo -e "PHP installed ${C_GREEN}✔${NO_FORMAT}"
fi

which ./vendor/bin/phpcs &>/dev/null

if [[ "$?" == 1 ]]; then
  echo -e "PHPCS not installed ${C_RED}✘${NO_FORMAT}"
  INSTALL=0
else
  echo -e "PHPCS installed ${C_GREEN}✔${NO_FORMAT}"
fi

if [[ $INSTALL == 0 ]]; then
  exit 0
fi

echo "Validating PHPCS..."

for FILE in $STAGED_FILES; do
  vendor/bin/phpcs --standard=PSR12 "$FILE"

  if [[ "$?" != 0 ]]; then
    PASS=false
  fi
done

if ! $PASS; then
  echo -e "${B_RED}PHPCS Failed!${NO_FORMAT}"
  vendor/bin/phpcs $STAGED_FILES --report=summary

  echo -ne "Do you want to commit with errors? (${C_GREEN}y${NO_FORMAT}/${C_RED}n${NO_FORMAT}) "
  read answer

  while [[ "$answer" != "y" && "$answer" != "n" ]]; do
    echo -ne "Wrong input. try again. (${C_GREEN}y${NO_FORMAT}/${C_RED}n${NO_FORMAT}) "
    read answer
  done

  if [[ "$answer" == "y" ]]; then
    echo -e "${C_YELLOW}Commiting with errors...${NO_FORMAT}"
  else
    exit 1
  fi
else
  echo -e "${C_GREEN}PHPCS Passed. Commiting...${NO_FORMAT}"
fi

exit $?
