#!/bin/sh

###################################################################################################################
## Protects master branch; allows merge commits into master; tells user how many commits are going to be pushed. ##
###################################################################################################################

protected_branch='master'
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
commits_behind=$(git rev-list --count origin/$current_branch...@ | cut -f1)

remote="$1"
url="$2"
z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha; do
        if [ "$local_sha" = $z40 ]; then
                # Handle delete
                echo "Deleting branch..."
                exit 0
        else
                if [ $protected_branch = $current_branch ]; then

                        if [ "$remote_sha" = $z40 ]; then
                                # New branch, examine all commits
                                range="$local_sha"
                        else
                                # Update to existing branch, examine new commits
                                range="$remote_sha..$local_sha"
                        fi

                        # Check for Merge commit
                        commit=$(git rev-list -n 1 --grep '^Merge' "$range")
                        if [ -n "$commit" ]; then
                                echo >&2 "\t\033[32mPUSH STARTING:\033[0m Found 'Merge' commit in $local_ref, pushing..."
                                exit 0
                        fi
                else
                        if [ $commits_behind -eq 0 ]; then
                                echo "\t\033[41mPUSH FAILED [$current_branch]:\033[0m There is nothing to push!"
                                exit 1
                        else
                                if [ $commits_behind -eq 1 ]; then
                                        echo "\t\033[32mPUSH STARTING [$current_branch]:\033[0m You're about to push $commits_behind commit!"
                                else
                                        echo "\t\033[32mPUSH STARTING [$current_branch]:\033[0m You're about to push $commits_behind commits!"
                                fi
                        fi
                fi
        fi
done
#//TODO -> When delete a remote branch, output "Merge completed! X commits are now needed to be pushed!"
